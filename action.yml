# This is a basic workflow to help you get started with Actions

name: Install Chrome, Firefox and Git on OS
description: Install Chrome, Firefox and Git on OS
inputs:
  chrome:
    type: boolean
    default: false
    # required: true
  firefox:
    type: boolean
    default: false
    # required: true
  git:
    type: boolean
    default: false
    # required: true
  isWindows:
    type: boolean
    # required: true
    default: ${{runner.os == 'Windows'}}

runs:
  using: "composite"
  steps:
    - shell: bash
      if: ${{ inputs.chrome == 'true' && inputs.isWindows == 'false'}}
      run: |
        echo ${{ inputs.isWindows}}
        sudo apt-get install google-chrome-stable
    - shell: bash
      if: ${{ inputs.firefox == 'true' && inputs.isWindows == 'false'}}
      run: |
        sudo apt-get install firefox
    - shell: bash
      if: ${{ inputs.git == 'true' && inputs.isWindows == 'false'}}
      run: |
        sudo apt-get install git
    - shell: powershell
      if: ${{ inputs.isWindows == 'true' && inputs.chrome == 'true'}}
      run: |
        $LocalTempDir = $env:TEMP; $ChromeInstaller = "ChromeInstaller.exe"; (new-object    System.Net.WebClient).DownloadFile('http://dl.google.com/chrome/install/375.126/chrome_installer.exe', "$LocalTempDir\$ChromeInstaller"); & "$LocalTempDir\$ChromeInstaller" /silent /install; $Process2Monitor =  "ChromeInstaller"; Do { $ProcessesFound = Get-Process | ?{$Process2Monitor -contains $_.Name} | Select-Object -ExpandProperty Name; If ($ProcessesFound) { "Still running: $($ProcessesFound -join ', ')" | Write-Host; Start-Sleep -Seconds 2 } else { rm "$LocalTempDir\$ChromeInstaller" -ErrorAction SilentlyContinue -Verbose } } Until (!$ProcessesFound)
    - shell: powershell
      if: ${{ inputs.isWindows == 'true' && inputs.firefox == 'true'}}
      run: |
        Invoke-WebRequest -OutFile "Firefox Installer.exe" -Uri https://download.mozilla.org/?product=firefox-stub
    - shell: powershell
      if: ${{ inputs.isWindows == 'true' && inputs.git == 'true'}}
      run: |
        # get latest download url for git-for-windows 64-bit exe
        $git_url = "https://api.github.com/repos/git-for-windows/git/releases/latest"
        $asset = Invoke-RestMethod -Method Get -Uri $git_url | % assets | where name -like "*64-bit.exe"
        # download installer
        $installer = "$env:temp\$($asset.name)"
        Invoke-WebRequest -Uri $asset.browser_download_url -OutFile $installer
        # run installer
        $git_install_inf = "<install inf file>"
        $install_args = "/SP- /VERYSILENT /SUPPRESSMSGBOXES /NOCANCEL /NORESTART /CLOSEAPPLICATIONS /RESTARTAPPLICATIONS /LOADINF=""$git_install_inf"""
        Start-Process -FilePath $installer -ArgumentList $install_args -Wait

branding:
  icon: "package"
  color: "blue"
